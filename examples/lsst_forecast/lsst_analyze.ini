;***********************************
;multinest is the default sampler
;***********************************
[runtime]
sampler = test
#sampler = emugen
#sampler = emcee
#verbosity = quiet

[test]
save_dir=output/lsst_forecast_cosmosis

[emugen]
#mode = cp 
keys = 
fixed_keys = 
error_keys = 
iterations = 5
initial_size = 20 #960
resample_size = 10 #480
chi2_cut_off = 1e6
batch_size = 5 #32 #128 
training_iterations = 5 #256 
emcee_walkers = 10
emcee_samples = 5000 ;10_000
emcee_burn = 0.3
emcee_thin = 1
last_emulated_module = 
tempering = 0.05 
tempering_file = output/tempering.txt
save_outputs = all
save_outputs_dir = output/lsst_forecast_emugen_3x2pt
trained_before = false
load_emu_filename = 

[star]
nsample_dimension=5

[grid]
nsample_dimension=20

[fisher]
step_size = 0.02

[output]
filename=  output/lsst_forecast_emugen_3x2pt/lsst_forecast.txt  #output/lsst_forecast_emcee/lsst_forecast_emcee.txt 
format=text

[pipeline]
timing=T
debug=T
modules = consistency camb  extrapolate 
          fast_pt load_nz photoz_bias_source photoz_bias_lens unbiased_galaxies 
          nonlinear_linear_alignment  pk_to_cl galaxy_bias 
          shear_calibration add_intrinsic 2pt_like 

#modules = consistency 
#          load_nz photoz_bias_source photoz_bias_lens 
#          ccl
#          2pt_like 

values = examples/lsst_forecast/lsst_values.ini
likelihoods = lsst
extra_output = data_vector/2pt_chi2 data_vector/covariance

[emcee]
walkers = 10
; This many samples is overkill, just to make the plots look a lot nicer.
samples = 5_000
; This is the interval at which convergence diagnostics are performed.
nsteps = 100
#pool = 10


[ccl]
file = structure/ccl/cl_with_ccl.py
ell_min_logspaced = 20.0
ell_max_logspaced = 5000. 
n_ell_logspaced = 20
data_sets=shear_cl galaxy_shear_cl galaxy_cl


[2pt_like]
file = likelihood/2pt/2pt_like.py
data_file=examples/lsst_forecast/lsst_simulation.fits
covmat_name=COVMAT
like_name=lsst
data_sets=shear_cl galaxy_shear_cl galaxy_cl

; we put these in a separate file because they are long
%include examples/lsst_forecast/scale-cuts.ini

[load_nz]
file = number_density/load_nz_fits/load_nz_fits.py
nz_file = examples/lsst_forecast/lsst_simulation.fits
data_sets=source lens
prefix_section=T
prefix_extension=T

[photoz_bias_source]
file = number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = photoz_source_errors

[photoz_bias_lens]
file = number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_lens
bias_section = photoz_lens_errors


[unbiased_galaxies]
file = bias/no_bias/no_bias.py

[shear_calibration]
file = shear/shear_bias/shear_m_bias.py
verbose = F


# The remainder of the pipeline is identical to the one used in the lsst_simulate.ini
# file adjacent to this one.
# We could put this text in a file lsst_common.ini and use the command:
# %include lsst_common.ini but I didn't want to be confusing

[nonlinear_linear_alignment]
#file = intrinsic_alignments/la_model/linear_alignments_interface.py
#method = bk_corrected
#do_galaxy_intrinsic = T
file = intrinsic_alignments/tatt/tatt_interface.py
sub_lowk = F
do_galaxy_intrinsic = F
ia_model = tatt

[add_intrinsic]
file=shear/add_intrinsic/add_intrinsic.py
shear-shear=T
position-shear=T


[consistency]
file = utility/consistency/consistency_interface.py

[camb]
file = boltzmann/camb/camb_interface.py
mode=all
lmax=5000 #2500
feedback=0
zmin_background = 0.
zmax_background = 4.
nz_background = 256
kmin=1e-4
kmax = 50.0
kmax_extrapolate = 50.0

[extrapolate]
file = boltzmann/extrapolate/extrapolate_power.py 
kmax = 500.

[galaxy_bias]
file = bias/binwise_bias/bin_bias.py


; This module uses the Limber approximation to compute shear-shear C_ell
; given the shear kernel (which is derived from the number density and 
; from geometry)

[pk_to_cl]
file = structure/projection/project_2d.py
ell_min_logspaced = 20.0
ell_max_logspaced = 5000. #2627.21847662
n_ell_logspaced = 20
shear-shear = source-source
position-shear = lens-source
position-position=lens-lens
shear-intrinsic = source-source
intrinsic-intrinsic = source-source
position-intrinsic = lens-source
verbose = F #T
sig_over_dchi = 20. 
shear_kernel_dchi = 10. 
;auto_only=lingal-lingal

[fast_pt]
file = structure/fast_pt/fast_pt_interface.py
do_ia = T
k_res_fac = 0.5
verbose = F